{"remainingRequest":"C:\\xampp\\htdocs\\game-market\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\game-market\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\game-market\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\game-market\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"C:\\xampp\\htdocs\\game-market\\src\\views\\Home.vue","mtime":1646046988960},{"path":"C:\\xampp\\htdocs\\game-market\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\game-market\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\game-market\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\game-market\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJnLW1haW4iIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRlbnQtZmlyc3QiIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudC1maXJzdC1iZyIsCiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogImltZy9CYWNrZ3JvdW5kLWNvbnRlbnQucG5nIiwgYWx0OiAiIiB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudC1maXJzdC1hcmVhIiwKICAgICAgICAgICAgICBhdHRyczogeyBpZDogImNvbnRlbnQtZmlyc3QiIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbnRlbnQtZmlyc3QtaW1nIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogImltZy9sb2dvLW5hbWUtbWFya2V0LnBuZyIsIGFsdDogIiIgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250ZW50LWZpcnN0LWJ0biBidG4iLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHRvOiB7CiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLiRjb29raWVzLmdldCgidG9rZW5fbWFpbiIpID8gIk15aXRlbXMiIDogIkhvbWUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigiIFRSQURFIE5PVyAiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbnRlbnQtYmctY29ubmVjdCIsCiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogImltZy9SZWN0YW5nbGUucG5nIiwgYWx0OiAiIiB9CiAgICAgICAgICB9KQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKSwKICAgIF92bS5fbSgwKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogImJnLXRoaXJkIiwgYXR0cnM6IHsgaWQ6ICJzZWN0aW9uLXRoaXJkIiB9IH0sCiAgICAgIFsKICAgICAgICBfYygiQWxsZ2FtZSIsIHsgb246IHsgaWRnYW1lOiBfdm0uaWRnYW1lIH0gfSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZW1wdHktc3BhY2UiIH0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50LXRoaXJkLWFyZWEgcm93IiB9LCBbCiAgICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250ZW50LXRoaXJkLWl0ZW0gcm93IiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiSG90SXRlbSIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgX3ZtLl9sKF92bS5ob3RJdGVtLCBmdW5jdGlvbih2LCBrZXkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgIHsga2V5OiBrZXksIHN0YXRpY0NsYXNzOiAiaXRlbS1ncmlkIGNvbC0zIiB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInN0YXRpYyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdG86IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6ICIvdHJhZGUvIiArIHYuZ2FtZV9pZCArICIvIiArIHYuaWQKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbS1pbWciIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiB2LnBpY3R1cmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF92bS4kSU1HX1VSTF9JVEVNICsgdi5waWN0dXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uJElNR19pbWFnZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0tZGV0YWlsIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiaDIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdHlsZTogX3ZtLl9mKCJjb2xvcl9zdHkiKSh2LnN0YXJfbGV2ZWwpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyh2Lm5hbWUuZW4pICsgIiAiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoX3ZtLl9zKHYubmFtZS50aCkpXSkKICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IGl0ZW0tZGV0YWlsLXByaWNlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uX2YoIm51bWJlcl9mb3JtYXQiKSh2LmFtb3VudCkpICsgIiBQIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgMAogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGVudC10aGlyZC1hcmVhIHJvdyIgfSwgWwogICAgICAgICAgICBfdm0uX20oMiksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudC10aGlyZC1pdGVtIHJvdyIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogIml0ZW1Hb29kUHJpY2UiIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIF92bS5fbChfdm0uaXRlbUdvb2RQcmljZSwgZnVuY3Rpb24odiwga2V5KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7IGtleToga2V5LCBzdGF0aWNDbGFzczogIml0ZW0tZ3JpZCBjb2wtMyIgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzdGF0aWMiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIHRvOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiAiL3RyYWRlLyIgKyB2LmdhbWVfaWQgKyAiLyIgKyB2LmlkCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0taW1nIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogdi5waWN0dXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfdm0uJElNR19VUkxfSVRFTSArIHYucGljdHVyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLiRJTUdfaW1hZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtLWRldGFpbCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImgyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IF92bS5fZigiY29sb3Jfc3R5Iikodi5zdGFyX2xldmVsKSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiICIgKyBfdm0uX3Modi5uYW1lLmVuKSArICIgIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaDEiLCBbX3ZtLl92KF92bS5fcyh2Lm5hbWUudGgpKV0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBpdGVtLWRldGFpbC1wcmljZSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLl9mKCJudW1iZXJfZm9ybWF0Iikodi5hbW91bnQpKSArICIgUCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIDAKICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50LXRoaXJkLWFyZWEgY29udGFpbmVyLWFsbGl0ZW0tc20gcm93IiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl9tKDMpLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudC10aGlyZC1pdGVtIHJvdyIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiQWxsaXRlbWdyZCIgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIF92bS5fbChfdm0uQWxsaXRlbSwgZnVuY3Rpb24odiwga2V5KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7IGtleToga2V5LCBzdGF0aWNDbGFzczogIml0ZW0tZ3JpZCAgY29sLTMiIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInN0YXRpYyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6ICIvdHJhZGUvIiArIHYuZ2FtZV9pZCArICIvIiArIHYuaWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0taW1nIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogdi5waWN0dXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF92bS4kSU1HX1VSTF9JVEVNICsgdi5waWN0dXJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS4kSU1HX2ltYWdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtLWRldGFpbCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJoMiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3R5bGU6IF92bS5fZigiY29sb3Jfc3R5Iikodi5zdGFyX2xldmVsKSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyh2Lm5hbWUuZW4pICsgIiAiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaDEiLCBbX3ZtLl92KF92bS5fcyh2Lm5hbWUudGgpKV0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3cgaXRlbS1kZXRhaWwtcHJpY2UiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5fZigibnVtYmVyX2Zvcm1hdCIpKHYuYW1vdW50KSkgKyAiIFAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIDAKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRlbnQtdGhpcmQtYXJlYSBjb250YWluZXIgc2hvdy1sZyIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb250ZW50LXRoaXJkLWl0aWxlIHJvdyIsCiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgImp1c3RpZnktY29udGVudCI6ICJzcGFjZS1iZXR3ZWVuIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCLguYTguK3guYDguJfguYfguKHguJfguLHguYnguIfguKvguKHguJQiKV0pLAogICAgICAgICAgICAgIF92bS5BbGxpdGVtLmxlbmd0aCA+IDQKICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtNiBwcmV2aW91cy1uZXh0LXpvbmUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInByZXZpb3VzLW5leHQtYnRuICIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJhcmlhLWxhYmVsIjogIlByZXZpb3VzIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucHJldmlvdXMoMCkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmFzIGZhLWFuZ2xlLWxlZnQiIH0pXQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwcmV2aW91cy1uZXh0LWJ0biAiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyAiYXJpYS1sYWJlbCI6ICJOZXh0IiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubmV4dCgwKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFtfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJmYXMgZmEtYW5nbGUtcmlnaHQiIH0pXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbnRlbnQtdGhpcmQtaXRlbSIsIGF0dHJzOiB7IGlkOiAiQWxsaXRlbXN3cCIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLkFsbGl0ZW0ubGVuZ3RoID4gMAogICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1haW4tY2Fyb3VzZWwiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJtYWluLWNhcm91c2VsLWFsbGl0ZW0iIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uQWxsaXRlbSwgZnVuY3Rpb24odiwga2V5KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGtleToga2V5LCBzdGF0aWNDbGFzczogImNhcm91c2VsLWNlbGwiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic3RhdGljIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bzogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogIi90cmFkZS8iICsgdi5nYW1lX2lkICsgIi8iICsgdi5pZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIml0ZW0taW1nIGl0ZW0taW1nLWNhcm91c2VsIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiB2LnBpY3R1cmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX3ZtLiRJTUdfVVJMX0lURU0gKyB2LnBpY3R1cmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLiRJTUdfaW1hZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbS1kZXRhaWwiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJoMiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBfdm0uX2YoImNvbG9yX3N0eSIpKHYuc3Rhcl9sZXZlbCkgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiAiICsgX3ZtLl9zKHYubmFtZS5lbikgKyAiICIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImgxIiwgW192bS5fdihfdm0uX3Modi5uYW1lLnRoKSldKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInJvdyBpdGVtLWRldGFpbC1wcmljZSIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fZigibnVtYmVyX2Zvcm1hdCIpKHYuYW1vdW50KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgKyAiIFAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdLAogICAgICAxCiAgICApCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJiZy1zZWNvbmQiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRlbnQtc2Vjb25kIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRlbnQtc2Vjb25kLWFyZWEgcm93IiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGVudC1zZWNvbmQtYWJvdXRtZSBjb2wtNiIgfSwgWwogICAgICAgICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkFib3V0IildKSwKICAgICAgICAgICAgICBfYygiaDEiLCBbX3ZtLl92KCJHYW1lIE1hcmtldCBTaG9wIildKSwKICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIiBMb3JlbSBJcHN1bSBpcyBzaW1wbHkgZHVtbXkgdGV4dCBvZiB0aGUgcHJpbnRpbmcgYW5kIHR5cGVzZXR0aW5nIGluZHVzdHJ5LiBMb3JlbSBJcHN1bSBoYXMgYmVlbiB0aGUgaW5kdXN0cnkncyBzdGFuZGFyZCBkdW1teSB0ZXh0IGV2ZXIgc2luY2UgdGhlIDE1MDBzLCB3aGVuIGFuIExvcmVtIElwc3VtIFBhZ2VNYWtlciBpbmNsdWRpbmcgdmVyc2lvbnMgb2YgTG9yZW0gSXBzdW0uICIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50LXNlY29uZC1sb2dvIGNvbC02IiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29udGVudC1zZWNvbmQtbG9nby1pbWciLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvY29udGVudC1sb2dvLnBuZyIpIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImVtcHR5LXNwYWNlIiB9KQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50LXRoaXJkLWl0aWxlIGNvbC0xMiIgfSwgWwogICAgICBfYygiaDIiLCBbX3ZtLl92KCLguYTguK3guYDguJfguYfguKHguKHguLLguYHguKPguIcg8J+UpSIpXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGVudC10aGlyZC1pdGlsZSBjb2wtMTIiIH0sIFsKICAgICAgX2MoImgyIiwgW192bS5fdigi4Lij4Lix4Lia4LiL4Li34LmJ4Lit4Lij4Liy4LiE4Liy4LiU4Li1IildKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250ZW50LXRoaXJkLWl0aWxlIGNvbC0xMiIgfSwgWwogICAgICBfYygiaDIiLCBbX3ZtLl92KCLguYTguK3guYDguJfguYfguKHguJfguLHguYnguIfguKvguKHguJQiKV0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}