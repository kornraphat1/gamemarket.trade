{"remainingRequest":"C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\src\\views\\Trade.vue?vue&type=template&id=ff5334cc&","dependencies":[{"path":"C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\src\\views\\Trade.vue","mtime":1659680933321},{"path":"C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\korn\\Desktop\\New folder\\gamemarket.trade\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}